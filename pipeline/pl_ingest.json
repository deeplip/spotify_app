{
	"name": "pl_ingest",
	"properties": {
		"activities": [
			{
				"name": "If data exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Global exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Global exists').output.exists",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "first_ingest",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Repos/deeplip/spotify_app/first_ingest",
								"baseParameters": {
									"playlist_id": "37i9dQZEVXbMDoHDwVN2tF"
								},
								"libraries": [
									{
										"pypi": {
											"package": "spotipy"
										}
									}
								]
							},
							"linkedServiceName": {
								"referenceName": "ingest",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "next_ingests",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Repos/deeplip/spotify_app/next_ingests",
								"baseParameters": {
									"playlist_id": "37i9dQZEVXbMDoHDwVN2tF"
								},
								"libraries": [
									{
										"pypi": {
											"package": "spotipy"
										}
									}
								]
							},
							"linkedServiceName": {
								"referenceName": "ingest",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Global exists",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "setPlaylistId",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "setPlaylistName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Global50",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Transform",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "If data exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Repos/deeplip/spotify_app/transform",
					"libraries": [
						{
							"pypi": {
								"package": "spotipy"
							}
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "ingest",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "tables_generator",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Transform",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Repos/deeplip/spotify_app/tables_generator",
					"baseParameters": {
						"playlist_id": "37i9dQZEVXbMDoHDwVN2tF"
					},
					"libraries": [
						{
							"pypi": {
								"package": "spotipy"
							}
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "ingest",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "analyst_transform",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "tables_generator",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Repos/deeplip/spotify_app/analyst_transform"
				},
				"linkedServiceName": {
					"referenceName": "ingest",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "getPlaylistParams",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"modifiedDatetimeStart": "2022-09-07T00:00:00.946Z",
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "params",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "setPlaylistId",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "getPlaylistParams",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "playlist_id",
					"value": {
						"value": "@activity('getPlaylistParams').output.firstRow['playlist_id']",
						"type": "Expression"
					}
				}
			},
			{
				"name": "setPlaylistName",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "getPlaylistParams",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "playlist_id",
					"value": {
						"value": "@activity('getPlaylistParams').output.firstRow['playlist_name']",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"playlist_id": {
				"type": "String"
			}
		},
		"annotations": []
	}
}